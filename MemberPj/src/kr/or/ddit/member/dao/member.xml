<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="member">
  <insert id="createMember" parameterClass="kr.or.ddit.member.vo.MemberVO">
    INSERT INTO TB_MEMBER (
      MEM_ID
      , MEM_PASS
      , MEM_NAME
      , MEM_BIR
      , MEM_ZIP
      , MEM_ADD1
      , MEM_ADD2
      , MEM_HP
      , MEM_MAIL
      , RECV_EMAIL_YN
      , MEM_JOB
      , MEM_LIKE
      , MEM_MEMORIAL_TYPE
      , MEM_MEMORIAL_DATE
      , MEM_MILEAGE
      , MEM_COMMENT
      , MEM_DELETE
    ) VALUES (
        #memId#
      , #memPass#
      , #memName#
      , #memBir#
      , #memZip#
      , #memAdd1#
      , #memAdd2#
      , #memHp#
      , #memMail#
      , #recvEmailYn#
      , #memJob#
      , #memLike#
      , #memMemorialType#
      , #memMemorialDate#
      , #memMileage#
      , #memComment#
      , #memDelete#
    )
  </insert>
  <update id="updateMember"></update>


<!-- parameterMap : Map을 정의
 -->
 
 <!-- MemID 만 조회하거나 memId, memName 둘다 포함하여 검색하거나.-->
 <!-- 다이나믹 쿼리 -->
  <select id="retrieveMember" parameterClass="String" resultClass="kr.or.ddit.member.vo.MemberVO">
    SELECT MEM_ID                memId             
             , MEM_PASS              memPass           
             , MEM_NAME              memName           
             , TO_CHAR(MEM_BIR, 'yyyy-mm-dd') memBir            
             , MEM_ZIP               memZip            
             , MEM_ADD1              memAdd1           
             , MEM_ADD2              memAdd2           
             , MEM_HP                memHp             
             , MEM_MAIL              memMail           
             , RECV_EMAIL_YN         recvEmailYn      
             , MEM_JOB               memJob      
    FROM TB_MEMBER
    WHERE MEM_ID = #memId#
  </select>
  
	
	<!-- WHERE 1=1는 무조건 수행됨. -->
	<!-- resultMap을 사용하지 않아서(parameterClass="kr.or.ddit.member.vo.MemberVO")
	     MEM_ID 에 Alias를 주어서 사용하였음.
	     Map을 사용하면 디버깅이 잘 안되고 어떤게 문제가 됐는지 까서 봐야함.
	     속도도 Map을 쓰면 조금 느리다고 함. (직관적인 문제로 Map은 새용하지 않음)
	     조회할 때, 파라미터 값이 각 select 태그 별로 다를 때, 맵을 또 추가해야 하므로 중복 코드가 발생함.
	     Map에 매핑된 필드는 모두 사용하지 않으면 오류가 발생한다.
	     parameterClass를 사용 시 f3으로 클래스 이동도 할 수 있다.
	  -->
	<select id="retrieveMemberList" parameterClass="kr.or.ddit.member.vo.MemberVO" resultClass="kr.or.ddit.member.vo.MemberVO">
    SELECT A.MEM_ID                memId             
             , A.MEM_PASS              memPass           
             , A.MEM_NAME              memName           
             , TO_CHAR(MEM_BIR, 'yyyy-mm-dd') memBir            
             , A.MEM_ZIP               memZip            
             , A.MEM_ADD1              memAdd1           
             , A.MEM_ADD2              memAdd2           
             , A.MEM_HP                memHp             
             , A.MEM_MAIL              memMail           
             , A.RECV_EMAIL_YN         recvEmailYn      
             , A.MEM_JOB               memJob            
             , B.CODE_NAME         memjobName
             , A.MEM_LIKE              memLike           
             , A.MEM_MEMORIAL_TYPE     memMemorialType  
             , A.MEM_MEMORIAL_DATE     memMemorialDate  
             , NVL(MEM_MILEAGE, 0)     memMileage        
             , A.MEM_COMMENT           memComment        
             , A.MEM_DELETE            memDelete         
          FROM TB_MEMBER A
              ,TB_CODE B
         WHERE 1=1
           AND B.GROUP_CODE(+) = 'A02'
           AND A.MEM_JOB = B.CODE(+)
         <isNotEmpty property="memId">
         AND MEM_ID LIKE '%'||#memId#||'%'
         </isNotEmpty>
         <isNotEmpty property="memName" prepend="AND">
         MEM_NAME = #memName#
         </isNotEmpty>
  </select>
	
</sqlMap>